// 'use strict';
function foo() {
  x = 10;
  // 'use strict'; // 코드의 선두에 위치시키지 않으면 strict mode가 적용되지 않는다.
}
foo();
console.log(x);

/**
 * x의 타입을 선언하지 않는 상태에서 값을 재할당하면 자바스크립트 엔진은 x의 존재가 어디있는지 찾기 시작할 것이다.
 * 먼저 foo 함수 내에서 x 변수 선언을 찾을 것이고 찾지 못하게 되면 foo 함수보다 상위 스코프인 전역 스코프에서
 * x 변수 선언을 찾게 될 것이다.
 * 전역 스코프에도 x 변수의 선언이 존재하지 않기 때문에 ReferenceError가 일어날 것 같지만 자바스크립트 엔진은 암묵적으로 
 * 전역 객체에 x 프로퍼티를 동적 생성한다. 이 때 전역 객체의 x 프로퍼티는 마치 전역 변수처럼 사용할 수 있다. 이러한 현상을 암묵적 전역이라 한다.
 * 이러한 암묵적 전역은 오류를 발생시키는 원인이 될 가능성이 있기 때문에 반드시 let, const 키워드를 사용하여 변수를 선언해야 한다.
 * 
 * 하지만 오타나 문법 지식의 미비로 인한 실수는 언제나 발생한다. 따라서 오류를 줄여 안정적인 코드를 생성하기 위해서는 좀 더 근본적인 접근이 필요하다.
 * 이를 지원하기 위해 ES5부터 strict mode(엄격 모드)가 추가되었다.
 * strict mode는 자바스크립트 언어의 문법을 좀 더 엄격히 적용하여 오류를 발생시킬 가능성이 있는 코드들에게 명시적인 에러를 발생시킨다.
 * 위의 코드는 strict mode를 사용하지 않으면 에러가 일어나지 않는데 strict mode 사용 후에는 x is not defined 에러가 일어난다.
 * 
 * strict mode는 함수 내에 사용했으면 그 함수 내에서만 스크립트 내에 사용했으면 그 스크립트 내에서만 적용이 된다.
 * 그래서 strict mode는 혼동을 방지하기 위해 즉시 실행 함수로 감싼 스크립트 단위로 적용하는 것이 바람직하다.
 */